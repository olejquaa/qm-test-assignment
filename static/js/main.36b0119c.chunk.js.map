{"version":3,"sources":["ui/colors.ts","components/Card/styles.ts","components/Card/Card.tsx","components/CardList/styles.ts","components/Title/styles.ts","components/Title/Title.tsx","components/CardList/CardList.tsx","components/Circles/styles.ts","components/Circles/Circles.tsx","components/Quiz/styles.ts","components/Quiz/Quiz.tsx","components/QuizQuestion/styles.ts","components/QuizQuestion/QuizQuestion.tsx","components/QuizResult.tsx/QuizResult.tsx","pages/MainPage/MainPage.tsx","App.tsx","ui/globalStyles.ts","index.tsx"],"names":["Color","StyledCard","styled","li","_templateObject","_taggedTemplateLiteral","CardTitle","p","_templateObject2","CardPrice","_templateObject3","props","$oldPrice","GRAY","CardImage","div","_templateObject4","LIGHT_GRAY","$imageUrl","FavoritesImage","img","_templateObject5","Card","_ref","id","title","image","price","oldPrice","React","createElement","Fragment","src","alt","StyledCardList","ul","StyledTitle","h1","BLACK","StyledSubtitle","h2","Title","subtitle","CardList","memo","products","map","_ref2","key","CirclesBlock","$id","LIGHT_BLUE","Circle","BLUE","Circles","questions","currentQuestion","circles","i","length","push","StyledQuizBlock","BACKGROUND_BLUE","CirclesSubtitle","span","StyledBlueButton","button","WHITE","StyledWhiteButton","Quiz","_useState","useState","_useState2","_slicedToArray","currentQuestionNumber","setCurrentQuestionNumber","_useState3","_useState4","isFinished","setFinished","console","log","handleNext","handlePrev","_questions","options","QuizResult","QuizQuestion","onClick","type","StyledQuizQuestion","StyledQuizVariant","RadioButton","input","StyledLabel","label","currentOptionValue","setOptionValue","onChange","e","target","value","item","checked","name","htmlFor","_regeneratorRuntime","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","this","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","isLoading","resultState","setResultState","useEffect","_asyncToGenerator","_callee","_context","axios","get","response","data","apply","arguments","fetchData","MainPage","appState","setAppState","App","GlobalStyle","createGlobalStyle","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.36b0119c.chunk.js","sourcesContent":["enum Color {\n  WHITE = \"#ffffff\",\n  BLACK = \"#000000\",\n  BLUE = \"#00A5FF\",\n  LIGHT_BLUE = \"#89D1F8\",\n  GRAY = \"#9A9A9A\",\n  LIGHT_GRAY = \"#E9E9E9\",\n  BACKGROUND_BLUE = \"#DDF3FF\",\n}\n\nexport { Color };\n","import styled from \"styled-components\";\nimport { Color } from \"ui\";\n\nexport const StyledCard = styled.li`\n  display: flex;\n  flex-direction: column;\n\n  justify-content: flex-end;\n  width: 100%;\n  height: 342px;\n  min-width: 240px;\n\n  cursor: pointer;\n`;\n\nexport const CardTitle = styled.p`\n  display: -webkit-box;\n  min-height: 45px;\n\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 130%; /* 23.4px */\n  text-align: left;\n\n  margin-top: 22;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n`;\n\nexport const CardPrice = styled.p<{ $oldPrice?: number }>`\n  margin-top: 15px;\n  margin-bottom: 0px;\n  font-size: 27px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 36.963px;\n\n  &:after {\n    content: \"руб.\";\n\n    margin-left: 5px;\n\n    font-size: 20px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: 136.9%;\n  }\n\n  &::before {\n    content: \"${(props) => props.$oldPrice}\";\n\n    color: ${Color.GRAY};\n\n    margin-right: 5px;\n\n    font-size: 20px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: 136.9%;\n    text-decoration: line-through;\n  }\n`;\n\nexport const CardImage = styled.div<{ $imageUrl?: string }>`\n  position: relative;\n  border-radius: 6.75px;\n  border: 1px solid ${Color.LIGHT_GRAY};\n\n  height: 100%;\n  background-image: url(${(props) => props.$imageUrl});\n  background-size: contain;\n  background-repeat: no-repeat;\n  background-position: center;\n`;\n\nexport const FavoritesImage = styled.img`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  cursor: pointer;\n`;\n","import React from \"react\";\nimport { Product } from \"types\";\nimport {\n  CardImage,\n  CardPrice,\n  CardTitle,\n  FavoritesImage,\n  StyledCard,\n} from \"./styles\";\n\nexport const Card = ({ id, title, image, price, oldPrice }: Product) => {\n  return (\n    <>\n      <StyledCard>\n        <CardImage $imageUrl={image}>\n          <FavoritesImage\n            src=\"./images/favorites.svg\"\n            alt=\"Favorites\"\n          ></FavoritesImage>\n        </CardImage>\n        <CardTitle>{title}</CardTitle>\n        <CardPrice $oldPrice={oldPrice}>{price}</CardPrice>\n      </StyledCard>\n    </>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const StyledCardList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 18%);\n  gap: 30px;\n  justify-content: space-between;\n\n  @media (max-width: 1415px) {\n    grid-template-columns: repeat(auto-fill, 22%);\n  }\n\n  @media (max-width: 1080px) {\n    grid-template-columns: repeat(auto-fill, 30%);\n  }\n\n  @media (max-width: 824px) {\n    grid-template-columns: repeat(auto-fill, 46%);\n  }\n\n  @media (max-width: 549px) {\n    grid-template-columns: repeat(auto-fill, 100%);\n  }\n`;\n","import styled from \"styled-components\";\nimport { Color } from \"ui\";\n\nexport const StyledTitle = styled.h1`\n  max-width: 700px;\n  color: ${Color.BLACK};\n\n  font-family: \"Inter\", sans-serif;\n  font-size: 40px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: normal;\n\n  @media (max-width: 549px) {\n    font-size: 25px;\n  }\n`;\n\nexport const StyledSubtitle = styled.h2`\n  max-width: 600px;\n  color: ${Color.BLACK};\n\n  font-family: \"Inter\", sans-serif;\n  font-size: 20px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n\n  @media (max-width: 549px) {\n    font-size: 14px;\n  }\n`;\n","import React from \"react\";\nimport { StyledSubtitle, StyledTitle } from \"./styles\";\n\ninterface Props {\n  title: string;\n  subtitle: string;\n}\n\nexport const Title = ({ title, subtitle }: Props) => {\n  return (\n    <>\n      <StyledTitle>{title}</StyledTitle>\n      <StyledSubtitle>{subtitle}</StyledSubtitle>\n    </>\n  );\n};\n","import { Card } from \"components/Card/Card\";\nimport { wrap } from \"module\";\nimport React, { memo } from \"react\";\nimport { Product } from \"types\";\nimport { StyledCardList } from \"./styles\";\nimport { Title } from \"components/Title/Title\";\n\ninterface Props {\n  isLoading: boolean;\n  products: Product[];\n}\n\nexport const CardList = memo(({ products }: Props) => {\n  return (\n    <>\n      <Title\n        title={\"Результат\"}\n        subtitle={\"Мы подобрали для вас наиболее подходящие средства\"}\n      />\n      <StyledCardList>\n        {products.map(({ id, title, image, price, oldPrice }) => (\n          <Card\n            id={id}\n            title={title}\n            image={image}\n            price={price}\n            oldPrice={oldPrice}\n            key={id}\n          />\n        ))}\n      </StyledCardList>\n    </>\n  );\n});\n","import styled from \"styled-components\";\nimport { Color } from \"ui\";\n\nexport const CirclesBlock = styled.div<{ $id?: number }>`\n  display: flex;\n\n  :nth-child(${(props) => props.$id}) {\n    background-color: ${Color.LIGHT_BLUE};\n  }\n\n  :last-child {\n    margin-right: 0px;\n  }\n`;\n\nexport const Circle = styled.div`\n  height: 20px;\n  width: 20px;\n\n  margin-right: 10px;\n\n  border-radius: 50%;\n  background-color: ${Color.BLUE};\n`;\n","import React from \"react\";\nimport { Question } from \"types\";\nimport { Circle, CirclesBlock } from \"./styles\";\n\ninterface Props {\n  questions: Question[];\n  currentQuestion: number;\n}\n\nexport const Circles = ({ questions, currentQuestion }: Props) => {\n  let circles = [];\n  for (let i = 0; i < questions.length; i++) {\n    circles.push(<Circle key={i}></Circle>);\n  }\n  return <CirclesBlock $id={currentQuestion}>{circles}</CirclesBlock>;\n};\n","import styled from \"styled-components\";\nimport { Color } from \"ui\";\n\nexport const StyledQuizBlock = styled.div`\n  max-width: 846px;\n  padding: 35px;\n  border-radius: 10px;\n  background-color: ${Color.BACKGROUND_BLUE};\n`;\n\nexport const CirclesSubtitle = styled.span`\n  display: flex;\n  margin-top: 16px;\n  margin-bottom: 38px;\n  font-size: 15px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  color: ${Color.GRAY};\n`;\n\nexport const StyledBlueButton = styled.button`\n  color: ${Color.WHITE};\n\n  padding: 10px 15px;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  border-radius: 5px;\n  background: ${Color.BLUE};\n\n  text-align: center;\n  font-size: 15px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: normal;\n\n  margin-bottom: 65px;\n\n  &:hover {\n    box-shadow: 2px 2px 2px ${Color.GRAY};\n  }\n`;\n\nexport const StyledWhiteButton = styled.button`\n  color: ${Color.BLACK};\n\n  padding: 10px 15px;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  margin-right: 10px;\n  margin-bottom: 65px;\n\n  border-radius: 5px;\n  background: ${Color.WHITE};\n\n  text-align: center;\n  font-size: 15px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: normal;\n\n  &:hover {\n    box-shadow: 2px 2px 2px ${Color.GRAY};\n  }\n`;\n","import { Circles, QuizQuestion, QuizResult, Title } from \"components\";\n\nimport React, { memo, useState } from \"react\";\nimport { Question } from \"types\";\nimport {\n  CirclesSubtitle,\n  StyledBlueButton,\n  StyledQuizBlock,\n  StyledWhiteButton,\n} from \"./styles\";\n\ninterface Props {\n  questions: Question[];\n}\n\nexport const Quiz = memo(({ questions }: Props) => {\n  const [currentQuestionNumber, setCurrentQuestionNumber] = useState(1);\n  const [isFinished, setFinished] = useState(false);\n\n  console.log(currentQuestionNumber);\n  console.log(questions);\n\n  const handleNext = () => {\n    console.log(\"clicked next\");\n    setCurrentQuestionNumber(currentQuestionNumber + 1);\n  };\n\n  const handlePrev = () => {\n    console.log(\"clicked prev\");\n    setCurrentQuestionNumber(currentQuestionNumber - 1);\n  };\n\n  const handleResult = () => {\n    console.log(\"clicked result\");\n    setFinished(true);\n  };\n\n  let { id, title, options } = questions[currentQuestionNumber - 1];\n\n  return isFinished ? (\n    <QuizResult />\n  ) : (\n    <>\n      <Title\n        title={\"Онлайн-подбор средств для лица\"}\n        subtitle={\n          \"Пройдите короткий тест и получите список наиболее подходящих для вас косметических продуктов\"\n        }\n      />\n      <StyledQuizBlock>\n        <Circles\n          questions={questions}\n          currentQuestion={currentQuestionNumber}\n        />\n        <CirclesSubtitle>\n          Вопрос {id} из {questions.length}\n        </CirclesSubtitle>\n\n        <QuizQuestion id={id} title={title} options={options} />\n\n        {currentQuestionNumber === 1 ? (\n          <StyledBlueButton onClick={handleNext} id=\"next\">\n            Дальше\n          </StyledBlueButton>\n        ) : currentQuestionNumber === questions.length ? (\n          <>\n            <StyledWhiteButton onClick={handlePrev} id=\"prev\">\n              Назад\n            </StyledWhiteButton>\n            <StyledBlueButton type=\"submit\" onClick={handleResult} id=\"result\">\n              Узнать результат\n            </StyledBlueButton>\n          </>\n        ) : (\n          <>\n            <StyledWhiteButton onClick={handlePrev} id=\"prev\">\n              Назад\n            </StyledWhiteButton>\n            <StyledBlueButton onClick={handleNext} id=\"next\">\n              Дальше\n            </StyledBlueButton>\n          </>\n        )}\n      </StyledQuizBlock>\n    </>\n  );\n});\n","import styled from \"styled-components\";\nimport { Color } from \"ui\";\n\nexport const StyledQuizQuestion = styled.h2`\n  color: ${Color.BLACK};\n\n  font-size: 20px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: normal;\n\n  margin-top: 0px;\n  margin-bottom: 32px;\n`;\n\nexport const StyledQuizBlock = styled.ul`\n  min-height: 250px;\n`;\n\nexport const StyledQuizVariant = styled.li`\n  color: ${Color.BLACK};\n\n  font-size: 15px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n\n  padding-bottom: 15px;\n`;\n\nexport const RadioButton = styled.input`\n  vertical-align: middle;\n  margin: -3px 0 0 0;\n  cursor: pointer;\n  width: 15px;\n  height: 15px;\n  margin-right: 10px;\n`;\n\nexport const StyledLabel = styled.label``;\n","import React, { memo, useState } from \"react\";\nimport { Question } from \"types\";\nimport {\n  RadioButton,\n  StyledLabel,\n  StyledQuizBlock,\n  StyledQuizQuestion,\n  StyledQuizVariant,\n} from \"./styles\";\n\nexport const QuizQuestion = memo(({ id, title, options }: Question) => {\n  const [currentOptionValue, setOptionValue] = useState(\"\");\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setOptionValue(e.target.value);\n  };\n\n  return (\n    <>\n      <StyledQuizBlock>\n        <StyledQuizQuestion>{title}</StyledQuizQuestion>\n        {options.map((item) => (\n          <StyledQuizVariant key={item}>\n            <RadioButton\n              type=\"radio\"\n              checked={currentOptionValue === item ? true : false}\n              name={title}\n              value={item}\n              onChange={onChange}\n            />\n            <StyledLabel htmlFor={item}>{item}</StyledLabel>\n          </StyledQuizVariant>\n        ))}\n      </StyledQuizBlock>\n    </>\n  );\n});\n","import axios from \"axios\";\nimport { CardList, Title } from \"components\";\nimport React, { memo, useEffect, useState } from \"react\";\nimport { ProductsResponse } from \"types\";\n\nexport const QuizResult = memo(() => {\n  const [resultState, setResultState] = useState<ProductsResponse>({\n    isLoading: true,\n    products: [],\n  });\n\n  const URL = \"products.json\";\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await axios.get(URL).then((response) => {\n        console.log(\"данные загружены\");\n        setResultState({\n          isLoading: false,\n          products: response.data,\n        });\n      });\n    };\n    fetchData();\n    console.log(\"загружает данные\");\n  }, [setResultState]);\n\n  return resultState.isLoading ? (\n    <span>Загрузка</span>\n  ) : (\n    <CardList\n      isLoading={resultState.isLoading}\n      products={resultState.products}\n    />\n  );\n});\n\n{\n  /* <Title\n  title={\"Результат\"}\n  subtitle={\"Мы подобрали для вас наиболее подходящие средства\"}\n/>; */\n}\n","import { Quiz } from \"components\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { QuestionsResponse } from \"types\";\n\nconst URL = \"questions.json\";\n\nexport const MainPage = () => {\n  const [appState, setAppState] = useState<QuestionsResponse>({\n    isLoading: true,\n    questions: [],\n  });\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await axios.get(URL).then((response) => {\n        console.log(\"данные загружены\");\n        setAppState({\n          isLoading: false,\n          questions: response.data,\n        });\n      });\n    };\n    fetchData();\n    console.log(\"загружает данные\");\n  }, [setAppState]);\n\n  return appState.isLoading ? (\n    <span>Загрузка</span>\n  ) : (\n    <div id=\"content-wrapper\">\n      <Quiz questions={appState.questions} />\n    </div>\n  );\n};\n","import { MainPage } from \"pages\";\nimport React from \"react\";\n\nexport const App = () => {\n  return <MainPage />;\n};\n","import { createGlobalStyle } from \"styled-components\";\nimport { Color } from \"./colors\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Inter&display=swap');\n\nbody, h1, h2, h3, h4, h5, h6, p, ol, ul {\n\n  font-family: 'Inter', sans-serif;\n  padding: 0;\n  color: ${Color.BLACK};\n  \n}\n\nbody {\n  margin: 0 auto;\n  background-color: ${Color.WHITE};\n}\n\nol, ul {\n  list-style: none;\n}\n\nimg {\n  max-width: 100%;\n  height: auto;\n}\n\ninput::-webkit-outer-spin-button,\ninput::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0; \n}\n\nbutton {\n  background: none repeat scroll 0 0 transparent;\n  border: medium none;\n  border-spacing: 0;\n  color: #26589F;\n  font-size: 16px;\n  font-weight: normal;\n  line-height: 1.42rem;\n  list-style: none outside none;\n  margin: 0;\n  padding: 0;\n  text-align: left;\n  text-decoration: none;\n  text-indent: 0;\n  cursor: pointer;\n}\n\n\na {\n  text-decoration: none;\n}\n\n#root {\n\n}\n\n#content-wrapper { \n  margin: 0 auto;\n  max-width: 1440px;\n  min-width: 320px;\n  padding: 20px;\n}\n`;\n\nexport { GlobalStyle };\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { App } from \"App\";\nimport { GlobalStyle } from \"ui/globalStyles\";\n\nconst root = ReactDOM.createRoot(\n  document.getElementById(\"root\") as HTMLElement\n);\nroot.render(\n  <>\n    <GlobalStyle />\n    <App />\n  </>\n);\n"],"sourceRoot":""}